---
title: "Data Tidying - Variable Transformation"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

Categorical

```{r}
cat_demo = 
  data.frame(gender = sample(c('Male','Female'),size = 10,T),
           age_group = sample( c('18-29','30-39','40-49','50-59','60 or over'),size = 10,T),
           marital_status = sample(c('married','widowed','divorced','separated','never married'),size = 10,T),
           ethnicity = sample(c('White','Black or African American','Native American','Asian','Hispanic','Other'),size = 10,T),
           zip_code = factor(sample(10001:10055,10,T)))
cat_demo
```

```{r}
summary(cat_demo)
```

Note the following characteristics of the variables: 1. gender takes on two non-numeric values 2. age_group has five age categories that are ordered. The values of age are in character form 3. marital status has five non-numeric values. These values would not be expected to have an order 4. ethnicity has six non-numeric values that are unordered 5. zip_code has numeric values but the numbers are no more than identifiers of an area

With categorical variables, it is not possible to perform standard operations such as mean and standard deviation in general and barring a few exceptions (such as Tree and Tree-based models) cannot be used in their native form in a predictive model.

Fast Food data To illustrate techniques for variable transformation, we will make use of some survey data gathered by a marketing researcher interested in examining the relationship between health consciousness and fast food. Data consists of 1. Health consciousness survey items scored on a scale of 1-7 (1 is strongly disagree, 7 is strongly agree) (a) health1: I am concerned about my health (b) health2: I watch what I eat (c) health3: I usually read ingredients on food labels 2. Fastfood restaurant ratings scored on a 1-7 scale (1 is extremely bad, 7 is extremely good) (a) mcdonalds: Rating of food at McDonalds (b) chipotle: Rating of food at Chipotle (c) shake_shack: Rating of food at Shake Shack 3. Fastfood restaurant Ranking (1-3 where is 1 most preferred) (a) rank_mcdonalds: Rank of McDonalds (b) rank_chipotle: Rank of Chipotle (c) rank_shake_shack: Rank of Shake Shack 4. Demographics of respondent (a) gender: Male, Female (b) age: 18-29, 30-39,40-49,50-59,60+ (c) marital_status: married, widowed, divorced, separated, never married (d) location (of restaurant): Manhattan, Brooklyn, Queens, New Jersey (e) duration: time in seconds to complete the survey

```{r}
df = read.csv('/Users/anshitathakkar/Documents/Predictive Analytics/Fast_foods.csv')
df
str(df)
```

Dummy Variables The most common approach to prepare categorical variables for predictive models is to dummy code them. A categorical variable with k levels is represented using k-1 dummy variables, where one of the levels serves as a reference level. A dummy variable can only take on two values, 0 and 1. We will examine dummy coding and other variable transformations using fast food survey data.

In this data, age has five categories.

```{r}
table(df$age)
```

Since age has five levels, it can be represented using 4 (=5-1) dummy variables. In the following illustration, dummy variables are manually created. The first level is used as a reference level, so it does not have a dummy variable representing it.

```{r}
df2 = df
df2$age30_39 = ifelse(test = df$age=='30-39',1,0)
df2$age40_49 = ifelse(test = df$age=='40-49',1,0)
df2$age50_59 = ifelse(test = df$age=='50-59',1,0)
df2$age60_or_over = ifelse(test = df$age=='60 or over',1,0)

df2
head(df2)
```

```{r}
library(tidyr); library(dplyr)

df2 %>%
  select(starts_with("age"))
```

Low Variance Variables that have zero variance have no predictive power, therefore should be eliminated. But, even variables that have variance close to zero should be candidates for exclusion as they have limited predictive power. Moreover, in analyses involving resampling, one of the samples may end up having a predictor with zero variance.

In the fastfood data, a very small percent of the sample is 60 or over.

```{r}
df2 %>%
  group_by(age)%>%
  summarize(n = n())%>%
  ungroup()%>%
  mutate(percent = 100*n/sum(n))
```

The nearZeroVar function in caret sifts through the data looking for variables that have a ratio of most common and second most common value greater than 19. Based on this criterion the dummy variable, age60_or_over is deemed to as having near zero variance.

```{r}
library(caret)
nearZeroVar(df2[,c('age','age30_39', 'age40_49', 'age50_59', 'age60_or_over')],saveMetrics = T)
```

```{r}
df3 = df2
df3$age = as.factor(df3$age)
table(df3$age)
```

```{r}
levels(df3$age) = c('18-29','30-39','40-49','50 and over','50 and over')
table(df3$age)
```

```{r}
library(forcats)
df3 = df2
fct_count(df3$age)
```

```{r}
 df3$age = fct_collapse(df3$age, '50_or_over' = c('50-59', '60 or over'))
fct_count(df3$age)
```

Other Category When a variable contains a number of rare or infrequently occurring levels, one solution is to put them in an "other" category. In fastfood data, most respondents are "married" or "never married".

```{r}
fct_count(df$marital_status)
proportions = prop.table(table(df$age))
proportions

```

```{r}
proportions = prop.table(table(df$marital_status))
proportions
```

```{r}
fct_lump(f = df$marital_status, prop = 0.1)%>%
  fct_count()
```
