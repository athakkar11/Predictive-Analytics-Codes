---
title: "Assignment 3B"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).


```{r}
install.packages('ISLR')
install.packages('caret') 
install.packages('caTools')
install.packages('ISLR2')

library(ISLR)
library(caret)
library(caTools)
library(ISLR2)
```

Q 1) Emily, a data scientist, fit a simple model to a dataset. The model RMSE (root mean squared error) is 34.23. She then  fit a more complex model to the same data. Which of the following is the most likely value of RMSE?
Question 1 options:

0

176.32

16.17 #this was chosen


Q2)  
 Saved
Max, a machine learning engineer, has estimated a predictive model on data his company has gathered. The RMSE (root mean squared error) of the model is 164.23. Next he applied his predictive model to a new dataset. Which of the following is the most likely value of RMSE?
Question 2 options:

0

13.34

363.19 #this one


Q3) The Carseats data that accompanies library(ISLR2) contains sales of child car seats at 400 different stores. To access the data, load the 'ISLR2' package and call the `Carseats` data as illustrated below.

library(ISLR2)
data(Carseats)


Use simple random sampling to split the data into a train and test sample with 80% of the data in the train sample. Use a seed of 617. Compute the average price in the train sample and in the test sample. What is the absolute difference in average price between the train and test samples?

```{r}
library(ISLR2)
data(Carseats)
Carseats
```

```{r}
set.seed(617)
train_index <- sample(1:nrow(Carseats),nrow(Carseats)*0.8)
train_index


train = Carseats[train_index,]
test = Carseats[-train_index,] 
train_index
train


avgprice_train <- mean(train$Price)
avgprice_test <- mean(test$Price)

avgprice_train
avgprice_test


difference_price = abs(avgprice_train - avgprice_test)
difference_price
```

Now, use stratified sampling to split the "Carseats" data into a train and test sample with 80% of the data in the train sample. Do the sampling in such a way that the distribution of "price" is approximately equal in both samples. Use a seed of 617 and utilize "createDataPartition", for the split and set groups to 10. Compute the average price in the train sample and in the test sample. What is the absolute difference in average price between the train and test samples? Since you are asked absolute difference, if the difference is negative, drop the negative sign.

```{r}
set.seed(617)

library(caret)

split <- createDataPartition(Carseats$Price, p = 0.8, list = FALSE, groups = 10)
train = Carseats[split,]
test = Carseats[-split,] 

avgprice_train <- mean(train$Price)
avgprice_test <- mean(test$Price)

abs_difference_price = abs(avgprice_train - avgprice_test)
abs_difference_price

```

Q5

The OJ data that accompanies library(ISLR) contains Orange Juice purchases where the customer either purchased Citrus Hill or Minute Maid. To access, the data load the `ISLR` package and call the OJ data as illustrated below.

library(ISLR)
data(OJ)


Use stratified sampling to split the OJ dataset into a train and test sample with 80% of the data in the train sample. Ensure that the proportion of Minute Maid (MM) noted in the "Purchase" variable is approximately equal across train and test samples. Use a seed of 617. Utilize "sample.split()" from library(caTools) for this problem. What is the proportion of Minute Maid (MM) purchases in the train dataset?

```{r}
library(ISLR)
data(OJ)
OJ
```

```{r}
library(caTools)

set.seed(617)

split_index <- sample.split(OJ$Purchase, SplitRatio = 0.8)
split_index

train_set <- subset(OJ, split_index == TRUE)
test_set <- subset(OJ, split_index == FALSE)

train_set
test_set

m_prop_train <- sum(train_set$Purchase == "MM") /nrow(train_set)
m_prop_train
```

